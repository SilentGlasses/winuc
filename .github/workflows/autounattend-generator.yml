name: Auto-generate autounattend.xml

on:
  push:
    branches:
      - main
    paths:
      - 'winuc.ps1'
  pull_request:
    branches:
      - main
    paths:
      - 'winuc.ps1'

jobs:
  detect-bypass-changes:
    runs-on: ubuntu-latest
    outputs:
      bypass_changed: ${{ steps.check-changes.outputs.bypass_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for bypass option changes
        id: check-changes
        run: |
          # Get the diff for winuc.ps1
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, compare against the base branch
            git fetch origin ${{ github.base_ref }}
            DIFF=$(git diff origin/${{ github.base_ref }} HEAD -- winuc.ps1)
          else
            # For pushes, compare with the previous commit
            DIFF=$(git diff HEAD^ HEAD -- winuc.ps1)
          fi

          # Check if bypass section was modified
          if echo "$DIFF" | grep -E "^\+.*bypass.*=|^\-.*bypass.*=|BypassTPMCheck|BypassSecureBootCheck|BypassRAMCheck|BypassCPUCheck|BypassStorageCheck|BypassNRO|BypassMSAOOBE" > /dev/null; then
            echo "bypass_changed=true" >> $GITHUB_OUTPUT
            echo "Bypass options have been modified"
          else
            echo "bypass_changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes detected in bypass options"
          fi

  generate-autounattend:
    runs-on: windows-latest
    needs: detect-bypass-changes
    if: needs.detect-bypass-changes.outputs.bypass_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate default autounattend.xml
        shell: pwsh
        run: |
          Write-Host "Generating default autounattend.xml with all bypass options..." -ForegroundColor Cyan

          # Source the script to load functions and options
          . .\winuc.ps1 -NoGUI 2>$null

          # Create a hashtable with only bypass options selected
          $selectedOptions = @{
            bypass = @(
              @{
                Name = 'Bypass TPM 2.0 Requirement'
                RegistryPath = 'HKLM:\SYSTEM\Setup\LabConfig'
                RegistryName = 'BypassTPMCheck'
                RegistryValue = 1
              },
              @{
                Name = 'Bypass Secure Boot Requirement'
                RegistryPath = 'HKLM:\SYSTEM\Setup\LabConfig'
                RegistryName = 'BypassSecureBootCheck'
                RegistryValue = 1
              },
              @{
                Name = 'Bypass RAM Requirement'
                RegistryPath = 'HKLM:\SYSTEM\Setup\LabConfig'
                RegistryName = 'BypassRAMCheck'
                RegistryValue = 1
              },
              @{
                Name = 'Bypass CPU Requirement'
                RegistryPath = 'HKLM:\SYSTEM\Setup\LabConfig'
                RegistryName = 'BypassCPUCheck'
                RegistryValue = 1
              },
              @{
                Name = 'Bypass Storage Requirement'
                RegistryPath = 'HKLM:\SYSTEM\Setup\LabConfig'
                RegistryName = 'BypassStorageCheck'
                RegistryValue = 1
              },
              @{
                Name = 'Skip OOBE Network Connection'
                RegistryPath = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE'
                RegistryName = 'BypassNRO'
                RegistryValue = 1
              },
              @{
                Name = 'Install Without Microsoft Account'
                RegistryPath = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE'
                RegistryName = 'BypassMSAOOBE'
                RegistryValue = 1
              }
            )
          }

          # Generate the XML content directly
          $xmlContent = @'
          <?xml version="1.0" encoding="utf-8"?>
          <unattend xmlns="urn:schemas-microsoft-com:unattend">
              <settings pass="windowsPE">
                  <component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
                      <RunSynchronous>
                          <RunSynchronousCommand wcm:action="add">
                              <Order>1</Order>
                              <Description>Bypass TPM 2.0 Requirement</Description>
                              <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassTPMCheck /t REG_DWORD /d 1 /f</Path>
                          </RunSynchronousCommand>
                          <RunSynchronousCommand wcm:action="add">
                              <Order>2</Order>
                              <Description>Bypass Secure Boot Requirement</Description>
                              <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassSecureBootCheck /t REG_DWORD /d 1 /f</Path>
                          </RunSynchronousCommand>
                          <RunSynchronousCommand wcm:action="add">
                              <Order>3</Order>
                              <Description>Bypass RAM Requirement</Description>
                              <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassRAMCheck /t REG_DWORD /d 1 /f</Path>
                          </RunSynchronousCommand>
                          <RunSynchronousCommand wcm:action="add">
                              <Order>4</Order>
                              <Description>Bypass CPU Requirement</Description>
                              <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassCPUCheck /t REG_DWORD /d 1 /f</Path>
                          </RunSynchronousCommand>
                          <RunSynchronousCommand wcm:action="add">
                              <Order>5</Order>
                              <Description>Bypass Storage Requirement</Description>
                              <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassStorageCheck /t REG_DWORD /d 1 /f</Path>
                          </RunSynchronousCommand>
                          <RunSynchronousCommand wcm:action="add">
                              <Order>6</Order>
                              <Description>Skip OOBE Network Connection</Description>
                              <Path>reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE" /v BypassNRO /t REG_DWORD /d 1 /f</Path>
                          </RunSynchronousCommand>
                          <RunSynchronousCommand wcm:action="add">
                              <Order>7</Order>
                              <Description>Install Without Microsoft Account</Description>
                              <Path>reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE" /v BypassMSAOOBE /t REG_DWORD /d 1 /f</Path>
                          </RunSynchronousCommand>
                      </RunSynchronous>
                  </component>
              </settings>
              <settings pass="oobeSystem">
                  <component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
                      <OOBE>
                          <HideEULAPage>true</HideEULAPage>
                          <HideLocalAccountScreen>false</HideLocalAccountScreen>
                          <HideOEMRegistrationScreen>true</HideOEMRegistrationScreen>
                          <HideOnlineAccountScreens>true</HideOnlineAccountScreens>
                          <HideWirelessSetupInOOBE>false</HideWirelessSetupInOOBE>
                          <NetworkLocation>Home</NetworkLocation>
                          <ProtectYourPC>1</ProtectYourPC>
                          <SkipUserOOBE>false</SkipUserOOBE>
                          <SkipMachineOOBE>false</SkipMachineOOBE>
                      </OOBE>
                      <UserAccounts>
                          <LocalAccounts>
                              <LocalAccount wcm:action="add">
                                  <Password>
                                      <Value></Value>
                                      <PlainText>true</PlainText>
                                  </Password>
                                  <Description>Local Administrator Account</Description>
                                  <DisplayName>Administrator</DisplayName>
                                  <Group>Administrators</Group>
                                  <Name>Admin</Name>
                              </LocalAccount>
                          </LocalAccounts>
                      </UserAccounts>
                  </component>
              </settings>
          </unattend>
          '@

          # Save to file
          $xmlContent | Out-File -FilePath "autounattend.xml" -Encoding utf8 -NoNewline

          Write-Host "autounattend.xml generated successfully" -ForegroundColor Green

      - name: Check if autounattend.xml changed
        id: check-diff
        run: |
          git diff --exit-code autounattend.xml
          if ($LASTEXITCODE -eq 1) {
            echo "file_changed=true" >> $env:GITHUB_OUTPUT
            Write-Host "autounattend.xml has changes" -ForegroundColor Green
          } else {
            echo "file_changed=false" >> $env:GITHUB_OUTPUT
            Write-Host "ℹ️ autounattend.xml unchanged" -ForegroundColor Yellow
          }

      - name: Commit and push changes
        if: steps.check-diff.outputs.file_changed == 'true' && github.event_name == 'push'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add autounattend.xml
          git commit -m "Auto-generate autounattend.xml from bypass option changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload autounattend.xml as artifact (for PRs)
        if: steps.check-diff.outputs.file_changed == 'true' && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: autounattend-xml
          path: autounattend.xml
          retention-days: 30

      - name: Comment on PR with artifact info
        if: steps.check-diff.outputs.file_changed == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '**Bypass options were modified!**\n\nA new `autounattend.xml` file has been generated with the updated bypass options. You can download it from the workflow artifacts.\n\n Please review the changes before merging.'
            })
