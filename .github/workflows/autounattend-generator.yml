name: Auto-generate autounattend.xml

on:
  push:
    branches:
      - main
    paths:
      - 'winuc.ps1'
  pull_request:
    branches:
      - main
    paths:
      - 'winuc.ps1'

jobs:
  detect-bypass-changes:
    runs-on: ubuntu-latest
    outputs:
      bypass_changed: ${{ steps.check-changes.outputs.bypass_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for bypass option changes
        id: check-changes
        run: |
          # Get a robust diff for winuc.ps1 that handles PRs, pushes, initial commits, and shallow clones.
          set -euo pipefail

          get_diff_from_range() {
            local base_ref="$1"
            git fetch origin "$base_ref" || true
            if git rev-parse --verify origin/"$base_ref" >/dev/null 2>&1; then
              git diff origin/"$base_ref"...HEAD -- winuc.ps1 || true
            else
              return 1
            fi
          }

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_REF="${{ github.base_ref }}"
            DIFF=$(get_diff_from_range "$BASE_REF") || DIFF=""
          else
            # For pushes, prefer comparing to the remote branch when possible
            REF_NAME="${GITHUB_REF#refs/heads/}"
            DIFF=$(get_diff_from_range "$REF_NAME") || {
              # Fallback to previous commit if remote ref unavailable (initial commit or unusual refs)
              if git rev-parse --verify HEAD^ >/dev/null 2>&1; then
                DIFF=$(git diff HEAD^ HEAD -- winuc.ps1) || true
              else
                DIFF=""
              fi
            }
          fi

          # Check if bypass section or bypass-related tokens were modified
          if echo "$DIFF" | grep -E "^\+.*bypass.*=|^\-.*bypass.*=|BypassTPMCheck|BypassSecureBootCheck|BypassRAMCheck|BypassCPUCheck|BypassStorageCheck|BypassNRO|BypassMSAOOBE" > /dev/null; then
            echo "bypass_changed=true" >> $GITHUB_OUTPUT
            echo "Bypass options have been modified"
          else
            echo "bypass_changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in bypass options"
          fi

  generate-autounattend:
    runs-on: windows-latest
    needs: detect-bypass-changes
    if: needs.detect-bypass-changes.outputs.bypass_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Generate default autounattend.xml
        shell: pwsh
        run: |
          Write-Host "Generating default autounattend.xml with all bypass options..." -ForegroundColor Cyan

          # Source the script to load functions and options
          . .\winuc.ps1 -NoGUI 2>$null

          # Generate the XML content directly (trim leading indentation for a clean file)
          $xmlContent = @'
          <?xml version="1.0" encoding="utf-8"?>
          <unattend xmlns="urn:schemas-microsoft-com:unattend">
            <settings pass="windowsPE">
              <component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
                <RunSynchronous>
                  <RunSynchronousCommand wcm:action="add">
                    <Order>1</Order>
                    <Description>Bypass TPM 2.0 Requirement</Description>
                    <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassTPMCheck /t REG_DWORD /d 1 /f</Path>
                  </RunSynchronousCommand>
                  <RunSynchronousCommand wcm:action="add">
                    <Order>2</Order>
                    <Description>Bypass Secure Boot Requirement</Description>
                    <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassSecureBootCheck /t REG_DWORD /d 1 /f</Path>
                  </RunSynchronousCommand>
                  <RunSynchronousCommand wcm:action="add">
                    <Order>3</Order>
                    <Description>Bypass RAM Requirement</Description>
                    <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassRAMCheck /t REG_DWORD /d 1 /f</Path>
                  </RunSynchronousCommand>
                  <RunSynchronousCommand wcm:action="add">
                    <Order>4</Order>
                    <Description>Bypass CPU Requirement</Description>
                    <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassCPUCheck /t REG_DWORD /d 1 /f</Path>
                  </RunSynchronousCommand>
                  <RunSynchronousCommand wcm:action="add">
                    <Order>5</Order>
                    <Description>Bypass Storage Requirement</Description>
                    <Path>reg add HKLM\SYSTEM\Setup\LabConfig /v BypassStorageCheck /t REG_DWORD /d 1 /f</Path>
                  </RunSynchronousCommand>
                  <RunSynchronousCommand wcm:action="add">
                    <Order>6</Order>
                    <Description>Skip OOBE Network Connection</Description>
                    <Path>reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE" /v BypassNRO /t REG_DWORD /d 1 /f</Path>
                  </RunSynchronousCommand>
                  <RunSynchronousCommand wcm:action="add">
                    <Order>7</Order>
                    <Description>Install Without Microsoft Account</Description>
                    <Path>reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE" /v BypassMSAOOBE /t REG_DWORD /d 1 /f</Path>
                  </RunSynchronousCommand>
                </RunSynchronous>
              </component>
            </settings>
            <settings pass="oobeSystem">
              <component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
                <OOBE>
                  <HideEULAPage>true</HideEULAPage>
                  <HideLocalAccountScreen>false</HideLocalAccountScreen>
                  <HideOEMRegistrationScreen>true</HideOEMRegistrationScreen>
                  <HideOnlineAccountScreens>true</HideOnlineAccountScreens>
                  <HideWirelessSetupInOOBE>false</HideWirelessSetupInOOBE>
                  <NetworkLocation>Home</NetworkLocation>
                  <ProtectYourPC>1</ProtectYourPC>
                  <SkipUserOOBE>false</SkipUserOOBE>
                  <SkipMachineOOBE>false</SkipMachineOOBE>
                </OOBE>
                <UserAccounts>
                  <LocalAccounts>
                    <LocalAccount wcm:action="add">
                      <Password>
                        <Value></Value>
                        <PlainText>true</PlainText>
                      </Password>
                      <Description>Local Administrator Account</Description>
                      <DisplayName>Administrator</DisplayName>
                      <Group>Administrators</Group>
                      <Name>Admin</Name>
                    </LocalAccount>
                  </LocalAccounts>
                </UserAccounts>
              </component>
            </settings>
          </unattend>
          '@

          # Trim leading indentation left by YAML block indentation so the XML file is clean
          $xmlContent = ($xmlContent -split "`n") | ForEach-Object { $_.TrimStart() } | Out-String

          # Save to file
          $xmlContent | Out-File -FilePath "autounattend.xml" -Encoding utf8

          Write-Host "autounattend.xml generated successfully" -ForegroundColor Green

      - name: Check if autounattend.xml changed
        id: check-diff
        run: |
          git diff --exit-code autounattend.xml
          if ($LASTEXITCODE -ne 0) {
            Add-Content -Path $env:GITHUB_OUTPUT -Value "file_changed=true"
            Write-Host "autounattend.xml has changes" -ForegroundColor Green
          } else {
            Add-Content -Path $env:GITHUB_OUTPUT -Value "file_changed=false"
            Write-Host "ℹ️ autounattend.xml unchanged" -ForegroundColor Yellow
          }

      - name: Commit and push changes
        if: steps.check-diff.outputs.file_changed == 'true' && github.event_name == 'push'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add autounattend.xml
          git commit -m "Auto-generate autounattend.xml from bypass option changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload autounattend.xml as artifact (for PRs)
        if: steps.check-diff.outputs.file_changed == 'true' && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: autounattend-xml
          path: autounattend.xml
          retention-days: 30

      - name: Comment on PR with artifact info
        if: steps.check-diff.outputs.file_changed == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '**Bypass options were modified!**\n\nA new `autounattend.xml` file has been generated with the updated bypass options. You can download it from the workflow artifacts.\n\n Please review the changes before merging.'
            })
